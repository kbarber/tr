  Might be better (possibly less flexible) to use
  http://search.cpan.org/~makamaka/JSON-RPC-0.95/lib/JSON/RPC.pm, though
  need to make sure it doesn't use filters?


Bit rough, but currently

Map path to modules:

/          : TR             { TR->json_action }
/ldap      : TR::ldap       { TR::ldap->json action }
/ldap/user : TR::ldap::user { TR::ldap::user->json_action }


TR::ldap inherets common stuff like config from TR.
TR::ldap::user inherits all ldap stuff from TR::ldap so common functions
for ldap live there.

Handler
  Doc support.
  Hand off, support CGI and mod_perl so app can be run stand alone.
  Have module per content-type, probaby handle input and output by per
  content modules (context)

  Maybe context should really be thought about as a transaction, handling
  in/out and being able to rollback later?

Think about:
  Auditing/Logging (easy to hook into _run_method)
  ACLs             (easy to hook into _run_method)
  Hooks?

